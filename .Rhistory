data_all_eda <- dplyr::bind_rows(
eda_join_left,
eda_join_right
)
data_all_acc
data_all_eda
data_all_eda <- data_all_eda %>%
mutate(volunteer_id = volunteer_id)
## add volunteer id
data_all_acc <- data_all_acc %>%
mutate(volunteer_id = volunteer_id)
data_all_eda <- data_all_eda %>%
mutate(volunteer_id = volunteer_id)
join_all_by_time <- left_join(data_all_acc,
data_all_eda, by = "time")
View(join_all_by_time)
library(artefacts)
data_volunteer_1 <- artefacts::parse_raw_data(
path = data_raw_path,
path_out = path_out,
volunteer_id = "volunteer_1"
) %>%
print()
data_list <- list(data_all_acc,
data_all_eda)
data_all_list <- list(data_all_acc,
data_all_eda)
names(data_all_list) <- c("acceleration",
"skin-conductance")
library(artefacts)
data_volunteer_1 <- artefacts::parse_raw_data(
path = data_raw_path,
path_out = path_out,
volunteer_id = "volunteer_1"
) %>%
print()
usethis::use_data(data_volunteer_1)
devtools::document()
library(artefacts)
data("artefacts")
data(package = "artefacts")
data(package = "artefacts")
library(artefacts)
devtools::document()
library(artefacts)
library(artefacts)
data(package = "artefacts")
data(package = "artefacts", "data_volunteer_1")
data(package = "artefacts", "data_volunteer_1")
data_volunteer_1
usethis::use_package("dplyr")
devtools::document()
usethis::use_package_doc()
usethis::use_package("utils")
usethis::use_cc0_license()
usethis::use_cc0_license("artefacts")
devtools::document()
path = here::here("data-raw", "subject01.zip")
path_out = here::here("data-raw")
## all_volunteers
## volunteer ids
volunteer_ids <- paste("volunteer", c(1:15), sep = "_")
volunteer_ids
list_archives <- list.files(path = data_raw_path,
full.names = TRUE)
path = here::here("data-raw", "subject01.zip")
path_out = here::here("data-raw")
list_archives <- list.files(path = data_raw_path,
full.names = TRUE)
## all_volunteers
## volunteer ids
volunteer_ids <- paste("volunteer", c(1:15), sep = "_")
list_archives <- list.files(path = path,
full.names = TRUE)
list_archives
list_archives <- list.files(path = path_out,
full.names = TRUE)
list_archives
x <- map(list_archives,
parse_raw_data[1:2],
path_out = path_out,
volunteer_id = volunteer_ids)
x <- purrr::map(list_archives,
parse_raw_data[1:2],
path_out = path_out,
volunteer_id = volunteer_ids)
x <- purrr::map(list_archives[1:2],
parse_raw_data,
path_out = path_out,
volunteer_id = volunteer_ids)
list_archives[1:2]
x <- purrr::map(list_archives[2:3],
parse_raw_data,
path_out = path_out,
volunteer_id = volunteer_ids)
x <- purrr::map(list_archives[2:3],
parse_raw_data,
path_out = path_out,
volunteer_id = volunteer_ids[2:3])
?purrr::map2
x <- purrr::map2(.x = list_archives[2:3],
.f = parse_raw_data,
path_out = path_out,
.y = volunteer_ids[2:3])
source('D:/r_projects/artefacts/data-raw/DATASET.R', echo=TRUE)
x[[1]]
x[[1]]$acceleration$volunteer_id %>% unique()
list_archives[2:3]
x <- purrr::map2(.x = list_archives[2:3],
.f = parse_raw_data,
path_out = path_out,
.y = volunteer_ids[1:2])
View(x)
x %>% purrr::transpose()
y <- x %>% purrr::transpose()
acc <- y$acceleration %>% dplyr::bind_rows()
eda <- y$`skin-conductance` %>% dplyr::bind_rows()
acc$volunteer_id %>% unique()
x <- purrr::map2(.x = list_archives[2:15],
.f = parse_raw_data,
path_out = path_out,
.y = volunteer_ids[1:15])
x <- purrr::map2(.x = list_archives[2:16],
.f = parse_raw_data,
path_out = path_out,
.y = volunteer_ids[1:15])
x[[1]]$acceleration$volunteer_id %>% unique()
y <- x %>% purrr::transpose()
acc <- y$acceleration %>% dplyr::bind_rows()
eda <- y$`skin-conductance` %>% dplyr::bind_rows()
acc$volunteer_id %>% unique()
usethis::use_data(data_accelaration_all)
data_accelaration_all <- y$acceleration %>% dplyr::bind_rows()
data_eda_all <- y$`skin-conductance` %>% dplyr::bind_rows()
usethis::use_data(data_accelaration_all)
usethis::use_data(data_eda_all)
data_acceleration_all <- y$acceleration %>% dplyr::bind_rows()
data_eda_all <- y$`skin-conductance` %>% dplyr::bind_rows()
usethis::use_data(data_accelaration_all)
usethis::use_data(data_eda_all)
usethis::use_data(data_acceleration_all)
devtools::document()
library(artefacts)
?artefacts::data_eda_all
View(data_accelaration_all)
## code to prepare `DATASET` dataset goes here
## packages
library(tidyverse)
library(here)
path = here::here("data-raw", "subject01.zip")
path_out = here::here("data-raw")
volunteer_id = "volunteer_1"
## volunteer 1
data_volunteer_1 <- artefacts::parse_raw_data(
path = data_raw_path,
path_out = path_out,
volunteer_id = "volunteer_1"
) %>%
print()
usethis::use_data(data_volunteer_1)
## all_volunteers
## volunteer ids
volunteer_ids <- paste("volunteer", c(1:15), sep = "_")
list_archives <- list.files(path = path_out,
full.names = TRUE)
x <- purrr::map2(.x = list_archives[2:16],
.f = parse_raw_data,
path_out = path_out,
.y = volunteer_ids[1:15])
#x[[1]]$acceleration$volunteer_id %>% unique()
y <- x %>% purrr::transpose()
data_acceleration_all <- y$acceleration %>% dplyr::bind_rows()
data_eda_all <- y$`skin-conductance` %>% dplyr::bind_rows()
usethis::use_data(data_acceleration_all)
usethis::use_data(data_eda_all)
#acc$volunteer_id %>% unique()
## packages
library(tidyverse)
library(here)
path = here::here("data-raw", "subject01.zip")
path_out = here::here("data-raw")
volunteer_id = "volunteer_1"
## volunteer 1
data_volunteer_1 <- artefacts::parse_raw_data(
path = data_raw_path,
path_out = path_out,
volunteer_id = "volunteer_1"
) %>%
print()
## volunteer 1
data_volunteer_1 <- artefacts::parse_raw_data(
path = path,
path_out = path_out,
volunteer_id = "volunteer_1"
) %>%
print()
## unzipping the archive
utils::unzip(path, exdir = path_out)
## files list unzippes csv
data_files <- list.files(path_out,
pattern = "\\.csv",
full.names = TRUE)
names(data_files) <- basename(data_files)
## looks like all but datafiles do not have a header
## Try again
instructions <- readr::read_csv(
file = data_files["subject01_instruction_command.csv"],
col_names = TRUE)
data_list_no_header <- purrr::map(data_files[2:length(data_files)],
readr::read_csv,
col_names = FALSE)
instructions
View(data_list_no_header)
path = here::here("data-raw", "subject01.zip")
path_out = here::here("data-raw")
volunteer_id = "volunteer_1"
## files list unzippes csv
data_files <- list.files(path_out,
pattern = "\\.csv",
full.names = TRUE)
data_files
path_out = here::here("data-raw", "subject_01")
dir.create(path_out)
## unzipping the archive
utils::unzip(path, exdir = path_out)
## files list unzippes csv
data_files <- list.files(path_out,
pattern = "\\.csv",
full.names = TRUE)
data_files
names(data_files) <- basename(data_files)
## looks like all but datafiles do not have a header
## Try again
instructions <- readr::read_csv(
file = data_files["subject01_instruction_command.csv"],
col_names = TRUE)
data_list_no_header <- purrr::map(data_files[2:length(data_files)],
readr::read_csv,
col_names = FALSE)
names(data_list_no_header)
## add index for timestamp
add_row_index <- function(df){
df$row_index <- c(1:nrow(df))
return(df)
}
## add index to each df "no header"
data_list_no_header <- purrr::map(data_list_no_header, add_row_index)
data_list_no_header[[1]]
## left hand/arm
instructions_time <- data_list_no_header[[1]]
instructions_time
## add headers
names(instructions_time) <- annotations_time
## left hand/arm
instructions_time <- data_list_no_header[[1]]
acc_data_left <- data_list_no_header[[2]]
acc_time_left <- data_list_no_header[[3]]
eda_data_left <- data_list_no_header[[4]]
eda_time_left <- data_list_no_header[[5]]
## right hand/arm
acc_data_right <- data_list_no_header[[6]]
acc_time_right <- data_list_no_header[[7]]
eda_data_right <- data_list_no_header[[8]]
eda_time_right <- data_list_no_header[[9]]
## define headers
annotations_acc <- c("x_axis_acc", "y_axis_acc", "z_axis_acc", "row_index")
annotations_eda <- c("eda", "row_index")
annotations_time <- c("time", "row_index")
## add headers
names(instructions_time) <- annotations_time
names(acc_data_left) <- annotations_acc
names(acc_data_right) <- annotations_acc
names(eda_data_left) <- annotations_eda
names(eda_data_right) <- annotations_eda
names(eda_time_left) <- annotations_time
names(eda_time_right) <- annotations_time
names(acc_time_left) <- annotations_time
names(acc_time_right) <- annotations_time
##inspect
acc_data_left
##inspect
instructions
instructions <- add_row_index(instructions)
##inspect
instructions
instructions_time
acc_data_left
acc_data_right
acc_time_left
acc_time_right
eda_data_left
eda_data_right
eda_time_left
eda_time_right
eda_time_right
eda_time_left
## join data and time
instructions_join <- left_join(instructions,
instructions_time,
by = "row_index")
acc_join_left <- dplyr::left_join(
acc_data_left,
acc_time_left
) %>%
dplyr::mutate(side = "left")
acc_join_right <- dplyr::left_join(
acc_data_right,
acc_time_right
) %>%
dplyr::mutate(side = "right")
eda_join_left <- dplyr::left_join(
eda_data_left,
eda_time_left
) %>%
dplyr::mutate(side = "left")
eda_join_right <- dplyr::left_join(
eda_data_right,
eda_time_right
) %>%
dplyr::mutate(side = "right")
## bind all together
data_all_acc <- dplyr::bind_rows(
acc_join_left,
acc_join_right
)
data_all_eda <- dplyr::bind_rows(
eda_join_left,
eda_join_right
)
## add volunteer id
data_all_acc <- data_all_acc %>%
dplyr::mutate(volunteer_id = volunteer_id)
data_all_eda <- data_all_eda %>%
dplyr::mutate(volunteer_id = volunteer_id)
instructions_join <- instructions_join %>%
dplyr::mutate(volunteer_id = volunteer_id)
instructions_join
## file_name to dataframes
add_file_name <- function(df, path){
file <- basename(path)
df$filename <- file
return(df)
}
data_list_no_header %>% names
data_list_no_header <- map2(.x = data_list_no_header,
.y = names(data_list_no_header),
.f = add_file_name)
data_list_no_header[[1]]
data_files["subject01_instruction_command.csv"]
instructions$file_name <- paste(volunteer_id, "instruction_command.csv",
sep = "_")
instructions
path = here::here("data-raw", "subject01.zip")
## dummies
path = here::here("data-raw", "subject01.zip")
path_out = here::here("data-raw", "subject01")
volunteer_id = "subject01"
## volunteer 1
data_volunteer_1 <- artefacts::parse_raw_data(
path = path,
path_out = path_out,
volunteer_id = "volunteer_1"
) %>%
print()
## volunteer 1
data_volunteer_1 <- artefacts::parse_raw_data(
path = path,
path_out = path_out,
volunteer_id = "subject01"
) %>%
print()
dir.create(path_out)
## unzipping the archive
utils::unzip(path, exdir = path_out)
## files list unzippes csv
data_files <- list.files(path_out,
pattern = "\\.csv",
full.names = TRUE)
## add file names
names(data_files) <- basename(data_files)
## read instructions file
instructions <- readr::read_csv(
file = data_files["subject01_instruction_command.csv"],
col_names = TRUE)
data_list_no_header <- purrr::map(data_files[2:length(data_files)],
readr::read_csv,
col_names = FALSE)
names(data_list_no_header)
## add index for timestamp
add_row_index <- function(df){
df$row_index <- c(1:nrow(df))
return(df)
}
## add index to each df "no header"
data_list_no_header <- purrr::map(data_list_no_header, add_row_index)
instructions <- add_row_index(instructions)
instructions
## file_name to dataframes
add_file_name <- function(df, path){
file <- basename(path)
df$filename <- file
return(df)
}
data_list_no_header <- map2(.x = data_list_no_header,
.y = names(data_list_no_header),
.f = add_file_name)
instructions$file_name <- paste(volunteer_id, "instruction_command.csv",
sep = "_")
instructions
data_list_no_header[[1]]
## left hand/arm
instructions_time <- data_list_no_header[[1]]
acc_data_left <- data_list_no_header[[2]]
acc_time_left <- data_list_no_header[[3]]
eda_data_left <- data_list_no_header[[4]]
eda_time_left <- data_list_no_header[[5]]
## right hand/arm
acc_data_right <- data_list_no_header[[6]]
acc_time_right <- data_list_no_header[[7]]
eda_data_right <- data_list_no_header[[8]]
eda_time_right <- data_list_no_header[[9]]
## define headers
annotations_acc <- c("x_axis_acc", "y_axis_acc", "z_axis_acc", "row_index")
annotations_eda <- c("eda", "row_index")
annotations_time <- c("time", "row_index")
## add headers
names(instructions_time) <- annotations_time
names(acc_data_left) <- annotations_acc
## add headers
names(instructions_time) <- annotations_time
names(acc_data_left) <- annotations_acc
instructions_time
acc_data_right
## define headers
annotations_acc <- c("x_axis_acc",
"y_axis_acc",
"z_axis_acc",
"row_index",
"file_name"
)
annotations_eda <- c("eda",
"row_index",
"file_name"
)
annotations_time <- c("time",
"row_index",
"file_names"
)
## add headers
names(instructions_time) <- annotations_time
names(acc_data_left) <- annotations_acc
names(acc_data_right) <- annotations_acc
names(eda_data_left) <- annotations_eda
names(eda_data_right) <- annotations_eda
names(eda_time_left) <- annotations_time
names(eda_time_right) <- annotations_time
names(acc_time_left) <- annotations_time
names(acc_time_right) <- annotations_time
##inspect
instructions
instructions_time
annotations_time <- c("time",
"row_index",
"file_name"
)
## add headers
names(instructions_time) <- annotations_time
names(acc_data_left) <- annotations_acc
names(acc_data_right) <- annotations_acc
names(eda_data_left) <- annotations_eda
names(eda_data_right) <- annotations_eda
names(eda_time_left) <- annotations_time
names(eda_time_right) <- annotations_time
names(acc_time_left) <- annotations_time
names(acc_time_right) <- annotations_time
##inspect
instructions
instructions_time
acc_data_left
acc_data_right
acc_time_left
acc_time_right
eda_data_left
eda_data_right
eda_time_left
eda_time_right
## join data and time
instructions_join <- left_join(instructions,
instructions_time,
by = "row_index")
acc_join_left <- dplyr::left_join(
acc_data_left,
acc_time_left
) %>%
dplyr::mutate(side = "left")
acc_join_left <- dplyr::left_join(
acc_data_left,
acc_time_left,
by = "row_index"
) %>%
dplyr::mutate(side = "left")
acc_join_left
acc_join_left <- dplyr::left_join(
acc_data_left,
acc_time_left
) %>%
dplyr::mutate(side = "left")
acc_join_left
## dummies
path = here::here("data-raw", "subject01.zip")
path_out = here::here("data-raw", "subject01")
devtools::document()
